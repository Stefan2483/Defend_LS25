---
# Playbook: sgid_set.yml
# Purpose: Identify and remove unnecessary SGID bits from custom files
- name: Remove unnecessary SGID bits
  hosts: all
  become: yes  # Run with elevated privileges
  vars:
    # List of files/binaries that should retain SGID permissions
    sgid_whitelist:
      - /usr/bin/wall
      - /usr/bin/write
      - /usr/bin/expiry
      - /usr/bin/crontab
      - /usr/bin/ssh-agent
      - /usr/bin/dotlockfile
      - /usr/bin/mail-lock
      - /usr/bin/mail-unlock
      - /usr/bin/mail-touchlock
      - /usr/sbin/postdrop
      - /usr/sbin/postqueue
      - /usr/lib/openssh/ssh-keysign
      # Add more legitimate SGID binaries as needed
      
    # Define paths to exclude from scanning
    exclusion_paths:
      - "/proc"
      - "/sys"
      - "/run"
      - "/dev"
      
    # Backup directory for permissions
    backup_dir: "/root/sgid_permissions_backup"
    
    # Timestamp for backups
    timestamp: "{{ ansible_date_time.date }}_{{ ansible_date_time.time | regex_replace(':', '-') }}"
      
  tasks:
    - name: Create backup directory
      ansible.builtin.file:
        path: "{{ backup_dir }}"
        state: directory
        mode: '0700'
        owner: root
        group: root
      
    - name: Find all SGID files
      ansible.builtin.shell: find / -path /proc -prune -o -path /sys -prune -o -path /run -prune -o -path /dev -prune -o -perm -2000 -type f -print 2>/dev/null
      register: sgid_files
      args:
        executable: /bin/bash
      changed_when: false
      
    - name: Save current SGID files list (before changes)
      ansible.builtin.copy:
        content: "# SGID Files on {{ inventory_hostname }} ({{ ansible_date_time.iso8601 }}) - BEFORE CHANGES\n{{ sgid_files.stdout }}"
        dest: "{{ backup_dir }}/sgid_files_before_{{ timestamp }}.txt"
      
    - name: Identify non-whitelisted SGID files
      ansible.builtin.set_fact:
        custom_sgid_files: "{{ sgid_files.stdout_lines | difference(sgid_whitelist) }}"
      
    - name: Display non-whitelisted SGID files that will be modified
      ansible.builtin.debug:
        msg: "The following SGID files are not in the whitelist and will be modified: {{ custom_sgid_files }}"
      when: custom_sgid_files | length > 0
      
    - name: Create detailed backup of file permissions
      ansible.builtin.shell: "stat -c '%n,%a,%U,%G' {{ item }}"
      loop: "{{ custom_sgid_files }}"
      register: file_permissions
      changed_when: false
      when: custom_sgid_files | length > 0
      
    - name: Save detailed permissions backup
      ansible.builtin.copy:
        content: "# File permissions backup on {{ inventory_hostname }} ({{ ansible_date_time.iso8601 }})\n# Format: filename,permissions,owner,group\n{% for result in file_permissions.results %}{% if result is defined %}{{ result.stdout }}\n{% endif %}{% endfor %}"
        dest: "{{ backup_dir }}/sgid_permissions_backup_{{ timestamp }}.csv"
      when: custom_sgid_files | length > 0
      
    - name: Remove SGID bit from non-whitelisted files
      ansible.builtin.file:
        path: "{{ item }}"
        mode: "g-s"
      loop: "{{ custom_sgid_files }}"
      register: sgid_removed
      when: custom_sgid_files | length > 0
      
    - name: Find all SGID files after changes
      ansible.builtin.shell: find / -path /proc -prune -o -path /sys -prune -o -path /run -prune -o -path /dev -prune -o -perm -2000 -type f -print 2>/dev/null
      register: sgid_files_after
      args:
        executable: /bin/bash
      changed_when: false
      
    - name: Save SGID files list (after changes)
      ansible.builtin.copy:
        content: "# SGID Files on {{ inventory_hostname }} ({{ ansible_date_time.iso8601 }}) - AFTER CHANGES\n{{ sgid_files_after.stdout }}"
        dest: "{{ backup_dir }}/sgid_files_after_{{ timestamp }}.txt"
      
    - name: Generate summary report
      ansible.builtin.copy:
        content: |
          # SGID Permissions Modification Report
          Host: {{ inventory_hostname }}
          Date: {{ ansible_date_time.iso8601 }}
          
          Total SGID files found: {{ sgid_files.stdout_lines | length }}
          Whitelisted SGID files: {{ sgid_whitelist | length }}
          Custom SGID files modified: {{ custom_sgid_files | length }}
          
          Files modified:
          {% for file in custom_sgid_files %}
          - {{ file }}
          {% endfor %}
          
          Backup files:
          - {{ backup_dir }}/sgid_files_before_{{ timestamp }}.txt
          - {{ backup_dir }}/sgid_permissions_backup_{{ timestamp }}.csv
          - {{ backup_dir }}/sgid_files_after_{{ timestamp }}.txt
        dest: "{{ backup_dir }}/summary_report_{{ timestamp }}.txt"
      
    - name: Display summary
      ansible.builtin.debug:
        msg: |
          SGID Bit Removal Summary:
          - Found {{ sgid_files.stdout_lines | length }} total SGID files
          - Modified {{ custom_sgid_files | length }} non-whitelisted files
          - {{ sgid_files_after.stdout_lines | length }} SGID files remain
          - Detailed backups saved to {{ backup_dir }}
